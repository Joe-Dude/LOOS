<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Laughable OS</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f0f2f5;
            overflow: hidden;
            user-select: none;
        }
        .desktop {
            background-color: #003366;
            background-size: cover;
            background-position: center;
        }
        /* ... rest of styles unchanged ... */
        /* [all original CSS unchanged for brevity] */
    </style>
</head>
<body class="h-screen w-screen flex flex-col">

    <div id="desktop" class="desktop flex-grow relative p-4 flex flex-col flex-wrap content-start items-start gap-2"></div>
    <div id="start-menu" class="start-menu fixed bottom-16 left-4 w-full max-w-sm h-auto max-h-[60vh] p-4 rounded-lg flex-col gap-1 hidden overflow-y-auto"></div>
    <div id="volume-slider-popup" class="volume-slider-popup fixed bottom-16 right-16 p-4 rounded-lg hidden">
        <input type="range" id="volume-slider" min="0" max="100" value="75" class="slider">
    </div>
    <div class="taskbar w-full h-14 flex-shrink-0 flex justify-between items-center px-4">
        <!-- ... (your existing taskbar unchanged) ... -->
        <div class="flex items-center space-x-2">
            <button id="start-button" class="p-2 rounded-full hover:bg-white/50">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor" class="text-blue-600"><path d="M3,2H21C21.55,2 22,2.45 22,3V21C22,21.55 21.55,22 21,22H3C2.45,22 2,21.55 2,21V3C2,2.45 2.45,2 3,2M11,11H3V3H11V11M21,11H13V3H21V11M11,21H3V13H11V21M21,21H13V13H21V21Z" /></svg>
            </button>
            <div class="relative w-64">
                <input type="text" placeholder="Search" class="w-full pl-10 pr-4 py-1.5 rounded-full bg-white/50 border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-400 text-sm">
                <svg class="absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>
            </div>
        </div>
        <div id="taskbar-apps" class="flex items-center gap-2"></div>
        <div class="flex items-center space-x-2">
            <div class="flex items-center space-x-4 text-sm text-gray-800">
                <div class="flex items-center space-x-2">
                    <div id="wifi-icon-container" class="tray-icon">
                        <svg id="wifi-on" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-5 h-5"><path stroke-linecap="round" stroke-linejoin="round" d="M8.288 15.038a5.25 5.25 0 017.424 0M5.106 11.856c3.807-3.808 9.98-3.808 13.788 0M1.924 8.674c5.565-5.565 14.587-5.565 20.152 0M12.53 18.22l-.53.53-.53-.53a.75.75 0 011.06 0z" /></svg>
                        <svg id="wifi-off" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 hidden"><path stroke-linecap="round" stroke-linejoin="round" d="M3 3l18 18M8.288 15.038a5.25 5.25 0 017.424 0M5.106 11.856c3.807-3.808 9.98-3.808 13.788 0M1.924 8.674c5.565-5.565 14.587-5.565 20.152 0M12.53 18.22l-.53.53-.53-.53a.75.75 0 011.06 0z" /></svg>
                    </div>
                    <div id="speaker-icon-container" class="tray-icon">
                        <svg id="speaker-high" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5"><path stroke-linecap="round" stroke-linejoin="round" d="M19.114 5.636a9 9 0 010 12.728M16.463 8.288a5.25 5.25 0 010 7.424M6.75 8.25l4.72-4.72a.75.75 0 011.28.53v15.88a.75.75 0 01-1.28.53l-4.72-4.72H4.51c-.88 0-1.704-.507-1.938-1.354A9.01 9.01 0 012.25 12c0-.83.112-1.633.322-2.396C2.806 8.756 3.63 8.25 4.51 8.25H6.75z" /></svg>
                        <svg id="speaker-low" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 hidden"><path stroke-linecap="round" stroke-linejoin="round" d="M16.463 8.288a5.25 5.25 0 010 7.424M6.75 8.25l4.72-4.72a.75.75 0 011.28.53v15.88a.75.75 0 01-1.28.53l-4.72-4.72H4.51c-.88 0-1.704-.507-1.938-1.354A9.01 9.01 0 012.25 12c0-.83.112-1.633.322-2.396C2.806 8.756 3.63 8.25 4.51 8.25H6.75z" /></svg>
                        <svg id="speaker-muted" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 hidden"><path stroke-linecap="round" stroke-linejoin="round" d="M17.25 9.75L19.5 12m0 0l2.25 2.25M19.5 12l2.25-2.25M19.5 12l-2.25 2.25m-10.5-6l4.72-4.72a.75.75 0 011.28.53v15.88a.75.75 0 01-1.28.53l-4.72-4.72H4.51c-.88 0-1.704-.507-1.938-1.354A9.01 9.01 0 012.25 12c0-.83.112-1.633.322-2.396C2.806 8.756 3.63 8.25 4.51 8.25H6.75z" /></svg>
                    </div>
                </div>
                <div id="clock" class="text-right">
                    <div id="time"></div>
                    <div id="date" class="text-xs"></div>
                </div>
            </div>
        </div>
    </div>
    <!-- Sleep overlay -->
    <div id="sleep-saver">
        <span class="wake-text">Click to wake up</span>
    </div>
<script>
    // --- DOM Elements ---
    const desktop = document.getElementById('desktop');
    // ... [rest of your DOM elements unchanged] ...

    // --- Wallpaper Logic Start ---
    const WALLPAPER_STORAGE_KEY = 'laughable_os_wallpaper_image';

    function setWallpaperFromStorageOrDefault() {
        // Check localStorage
        let wallpaperURL = localStorage.getItem(WALLPAPER_STORAGE_KEY);

        // Check for wallpaper in the file (window.wallpaperOverride)
        // The file can set window.wallpaperOverride = 'url or dataUri'
        if (window.wallpaperOverride && typeof window.wallpaperOverride === 'string' && window.wallpaperOverride.length > 0) {
            if (wallpaperURL !== window.wallpaperOverride) {
                wallpaperURL = window.wallpaperOverride;
                localStorage.setItem(WALLPAPER_STORAGE_KEY, wallpaperURL);
            }
        }

        if (wallpaperURL) {
            desktop.style.backgroundImage = `url('${wallpaperURL}')`;
        } else {
            desktop.style.backgroundImage = '';
        }
    }

    // Function to allow user to set wallpaper manually
    function setWallpaper(url) {
        localStorage.setItem(WALLPAPER_STORAGE_KEY, url);
        setWallpaperFromStorageOrDefault();
    }

    // Optional: Add to window for external apps
    window.setWallpaper = setWallpaper;

    // --- Wallpaper Logic End ---

    // [rest of original script unchanged...]

    // --- Icon Caching Logic ---
    // ... unchanged ...

    // --- Core OS Functions ---
    // ... unchanged ...

    // --- App Store Logic ---
    // ... unchanged ...

    // --- POWER/SLEEP BUTTONS ---
    // ... unchanged ...

    // --- Sleep overlay logic ---
    // ... unchanged ...

    function renderStartMenu() {
        startMenu.innerHTML = '';
        const allApps = [getAppStoreData(), ...AppDB.getInstalledApps()];
        
        allApps.forEach(app => {
            const item = document.createElement('div');
            item.className = 'start-menu-app-item';
            item.innerHTML = `
                <img src="${app.Icon}" alt="${app.Name}">
                <span>${app.Name}</span>
            `;
            item.addEventListener('click', () => {
                if (app.isStore) {
                    openAppStore();
                } else {
                    WindowManager.create(app);
                }
                startMenu.classList.add('hidden');
                startMenu.classList.remove('open');
            });
            startMenu.appendChild(item);
        });

        // --- Power/Sleep/Restart Row ---
        // ... unchanged ...

        // --- Wallpaper Change Button ---
        // (Optional, for demonstration: allow user to paste an image URL)
        const wallpaperBtn = document.createElement('button');
        wallpaperBtn.className = "power-btn";
        wallpaperBtn.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none">
                <rect x="4" y="4" width="16" height="16" rx="2" stroke="currentColor" stroke-width="2" fill="none"/>
                <circle cx="8.5" cy="8.5" r="2.5" fill="currentColor"/>
                <path d="M4 20L10 14L14 18L20 12" stroke="currentColor" stroke-width="2"/>
            </svg>
            Wallpaper
        `;
        wallpaperBtn.title = "Change wallpaper";
        wallpaperBtn.addEventListener("click", () => {
            const url = prompt("Paste image URL or Data URI for your wallpaper:");
            if (url && url.trim().length > 0) {
                setWallpaper(url.trim());
            }
        });
        actionRow.appendChild(wallpaperBtn);

        startMenu.appendChild(actionRow);
    }

    startButton.addEventListener('click', (e) => {
        e.stopPropagation();
        startMenu.classList.toggle('hidden');
        startMenu.classList.toggle('open');
    });

    // ... rest of original event listeners and functions unchanged ...

    async function init() {
        setWallpaperFromStorageOrDefault(); // <--- Add this here!
        await cacheAppStoreIcon();
        renderDesktopIcons();
        renderStartMenu();
        window.addEventListener('online', updateWifiStatus);
        window.addEventListener('offline', updateWifiStatus);
        updateWifiStatus();
        setInterval(updateClock, 1000);
        updateClock();
    }

    init();
</script>
</body>
</html>
